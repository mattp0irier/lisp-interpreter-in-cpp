(define getMax (a) (if (list? a) (begin
    (set max (car a))
    (set list a)
    (while (notnull? (cdr list)) (begin
        (if (> (car list) max) (set max (car list)) ())
        (set list (cdr list))
    ))
    (if (> (car list) max) (set max (car list)) ())
    max
) a ))

(define reverse (a) (begin
    (set temp a)
    (set b (car a))
    (while (notnull? (cdr temp)) (begin
        (set temp (cdr temp))
        (set b ((car temp) b))
    ))
    b
))

(define remove (a b) (if (list? a) (begin
    (set temp a)
    (set newList (car a))
    (while (notnull? (cdr temp)) (begin
        (set temp (cdr temp))
        (if (= (car temp) b) () (begin
        (set newList ((car temp) newList))
        ))
    ))
    (if (= (car a) b) (set newList (cdr a)) ())
    newList
) (if (= a b) () a)))

(define sort (a) (if (number? a) (a) (begin
    (set list a)
    (set max (getMax list))
    (set newList max)
    (set list (remove list max))
    (while (notnull? list) (begin
        (set max (getMax list))
        (set newList (max newList))
        (set list (remove list max))
    ))
    newList
)))

(print "LIST MANIPULATION TEST")
(print "")

(print "Test 1")
(set a (1))
(print ("list: " a))
(print ("reverse: " (reverse a)))
(print ("removing max value: " (remove a (getMax a))))
(print ("sort: " (sort a)))
(print "")

(print "Test 2")
(set a (9 8 7 6 5 4 3 2 1))
(print ("list: " a))
(print ("reverse: " (reverse a)))
(print ("removing max value: " (remove a (getMax a))))
(print ("sort: " (sort a)))
(print "")


(print "Test 3")
(set a (456 98 45 3 2 12 34 5 7 89 9 65 789 234 098 567 32 678))
(print ("list: " a))
(print ("reverse: " (reverse a)))
(print ("removing max value: " (remove a (getMax a))))
(print ("sort: " (sort a)))
(print "")

(print "Test 4")
(set a (5 2 0 8 -2 -6 -3 9 10 62))
(print ("list: " a))
(print ("reverse: " (reverse a)))
(print ("removing max value: " (remove a (getMax a))))
(print ("sort: " (sort a)))
