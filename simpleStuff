(define newLine () (print ""))

(print "Basic Arith Ops")
(newline)

(print "Expected value: 6")
(+ 2 4)
(newline)

(print "Expected value: 9")
(- 10 1)
(newline)

(print "Expected value: 6")
(* 1 6)
(newline)

(print "Expected value: 9")
(/ 81 9)
(newline)

(print "Expected value: ERROR")
(/ 81 0)
(newline)

(print "Expected value: 3")
(% 7 4)
(newline)

(print "Expected value: -3")
(% -7 4)
(newline)

(print "Expected value: -36")
(* (- 0 (% 27 7)) (+ 2 (/ 100 25)))
(newline)

(print "Basic Rel Ops")
(newline)

(print "Expected value: T")
(< 3 4)
(newline)

(print "Expected value: ()")
(< 4 3)
(newline)

(print "Expected value: T")
(<= -3 4)
(newline)

(print "Expected value: T")
(<= 4 4)
(newline)

(print "Expected value: ()")
(> 3 4)
(newline)

(print "Expected value: T")
(> 4 3)
(newline)

(print "Expected value: ()")
(>= 3 4)
(newline)

(print "Expected value: T")
(>= 4 4)
(newline)

(print "Expected value: T")
(= 4 4)
(newline)

(print "Expected value: ()")
(= 3 4)
(newline)

(print "Expected value: T")
(= -3 -3)
(newline)

(print "Basic ? Ops")
(newline)

(print "Expected value: T")
(null? ())
(newline)

(print "Expected value: T")
(list? ())
(newline)

(print "Expected value: ()")
(number? ())
(newline)

(print "Expected value: T")
(symbol? ())
(newline)

(print "Expected value: ()")
(null? t)
(newline)

(print "Expected value: ()")
(list? t)
(newline)

(print "Expected value: ()")
(number? t)
(newline)

(print "Expected value: T")
(symbol? t)
(newline)

(print "Expected value: ()")
(null? 1)
(newline)

(print "Expected value: ()")
(list? 1)
(newline)

(print "Expected value: T")
(number? 1)
(newline)

(print "Expected value: T")
(symbol? 1)
(newline)

(print "Expected value: ()")
(null? "a")
(newline)

(print "Expected value: ()")
(list? "a")
(newline)

(print "Expected value: ()")
(number? "a")
(newline)

(print "Expected value: T")
(symbol? "a")
(newline)

(print "define atom? function")
(define atom? (a)
    (if (list? a) (if (null? a) T ()) T)
)

(print "test atom? function")
(newline)

(print "expected output: T")
(atom? 1)
(newline)

(print "expected output: T")
(atom? T)
(newline)

(print "expected output: T")
(atom? ())
(newline)

(print "expected output: T")
(atom? "this")
(newline)

(print "expected output: ()")
(atom? (1 3))
(newline)

(print "Basic List Ops")
(newline)

(print "Expected value: (1 (2 (3 (4 (5 (6))))))")
(print (set a (1 2 3 4 5 6)))
(newline)

(print "Expected value: (1 . 2)")
(print (set b (cons 1 2)))
(newline)

(print "Expected value: (a (b (c (d (e (f))))))")
(print (set c ("a" "b" "c" "d" "e" "f")))
(newline)

(print "Expected value: (a . b)")
(print (set d (cons "a" "b")))
(newline)

(print "Expected value: 1")
(print (car a))
(newline)

(print "Expected value: (2 (3 (4 (5 (6)))))")
(print (cdr a))
(newline)

(print "Expected value: 1")
(print (car b))
(newline)

(print "Expected value: 2")
(print (cdr b))
(newline)

(print "Expected value: a")
(print (car c))
(newline)

(print "Expected value: (b (c (d (e (f)))))")
(print (cdr c))
(newline)

(print "Expected value: a")
(print (car d))
(newline)

(print "Expected value: b")
(print (cdr d))
(newline)